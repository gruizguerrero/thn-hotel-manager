services:
    _defaults:
        public: true

    App\Tests\DataFixtures\:
        resource: '../tests/DataFixtures/*'

    _instanceof:
        App\Tests\DataFixtures\DataLoader\MySQL\Fixtures:
            tags: [ 'doctrine.fixture.orm' ]

    doctrine.fixtures.purger.orm_purger_factory:
        class: App\Tests\DataFixtures\Purger\CustomPurgerFactory
        tags:
            - { name: 'doctrine.fixtures.purger_factory', alias: 'default' }

    ### RabbitMQ Configuration ###
    rabbitmq_connection_thn:
        class: PhpAmqpLib\Connection\AMQPStreamConnection
        arguments:
            - '%env(AMQP_TRANSPORT_DSN_URL)%'
            - '%env(AMQP_TRANSPORT_DSN_PORT)%'
            - '%env(AMQP_TRANSPORT_DSN_USER)%'
            - '%env(AMQP_TRANSPORT_DSN_PASS)%'
            - '%env(AMQP_TRANSPORT_DSN_VHOST)%'

    ### Bus configuration ###
    test.traceable.messenger.bus.events:
        class: Symfony\Component\Messenger\TraceableMessageBus
        arguments:
            - '@messenger.bus.events'

    test.App\Shared\Infrastructure\Bus\Event\MessengerEventBus:
        class: App\Shared\Infrastructure\Bus\Event\MessengerEventBus
        arguments:
            - '@test.traceable.messenger.bus.events'

    thn.shared.application.event_bus: '@test.App\Shared\Infrastructure\Bus\Event\MessengerEventBus'

    App\Tests\Acceptance\ApiContext:
        arguments:
            - '@kernel'

    App\Tests\Acceptance\HotelContext:
        arguments:
            - '@kernel'
            - '@test.App\Context\Availability\Domain\Read\Repository\AvailabilityRepository'

    App\Tests\Acceptance\BookingContext:
        arguments:
            - '@kernel'

    App\Tests\Acceptance\MetricContext:
        arguments:
            - '@kernel'
            - '@thn.shared.application.event_bus'

    App\Tests\Acceptance\MessageContext:
            - '@kernel'
            - '@rabbitmq_connection_thn'

    test.App\Context\Hotel\Domain\Write\Repository\HotelRepository: '@App\Context\Hotel\Infrastructure\Write\Persistence\Doctrine\MySQL\Repository\DoctrineHotelRepository'
    test.App\Context\Availability\Domain\Read\Repository\AvailabilityRepository: '@App\Context\Availability\Infrastructure\Read\Persistence\MySQL\Repository\MySQLAvailabilityCalendarRepository'
    test.App\Context\Booking\Domain\Write\Repository\BookingRepository: '@App\Context\Booking\Infrastructure\Write\Persistence\Doctrine\MySQL\Repository\DoctrineBookingRepository'
    test.App\Context\Metric\Domain\Read\Repository\HotelUniqueUsersViewRepository: '@App\Context\Metric\Infrastructure\Read\Persistence\MySQL\MySQLHotelUniqueUsersViewRepository'

    App\Tests\DataFixtures\DataLoader\MySQL\AvailabilityFixtures:
        class: App\Tests\DataFixtures\DataLoader\MySQL\AvailabilityFixtures
        arguments:
            - '@test.App\Context\Availability\Domain\Read\Repository\AvailabilityRepository'
